{"version":3,"sources":["src/app.js","src/contact-detail.js","src/contact-list.js","src/environment.js","src/main.js","src/messages.js","src/no-selection.js","src/utility.js","src/web-api.js","src/resources/index.js","src/resources/elements/loading-indicator.js"],"names":["App","inject","configureRouter","config","router","title","map","route","moduleId","name","ContactDetail","api","ea","activate","params","routeConfig","getContactDetails","id","then","contact","navModel","setTitle","firstName","originalContact","JSON","parse","stringify","save","saveContact","publish","canDeactivate","result","confirm","lastName","isRequesting","ContactList","contacts","subscribe","select","msg","found","find","x","Object","assign","created","getContactList","selectedId","debug","testing","configure","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","setRoot","ContactUpdated","ContactViewed","NoSelection","message","areEqual","obj1","obj2","keys","every","key","hasOwnProperty","latency","getId","email","phoneNumber","WebAPI","Promise","setTimeout","results","resolve","filter","instance","index","indexOf","push","globalResources","nprogress","LoadingIndicator","defaultValue","on","loadingChanged","newValue","done"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {WebAPI} from './web-api';\n\nexport class App {\n  static inject() { return [WebAPI];}\n\n  configureRouter(config, router) {\n    config.title = 'Contacts';\n    config.map([\n      { route: '',              moduleId: 'no-selection',   title: 'Select'},\n      { route: 'contacts/:id',  moduleId: 'contact-detail', name: 'contacts' }\n    ]);\n\n    this.router = router;\n  }\n}\n","import { EventAggregator } from 'aurelia-event-aggregator';\r\nimport { WebAPI } from './web-api';\r\nimport { ContactUpdated, ContactViewed } from './messages';\r\nimport { areEqual } from './utility';\r\n\r\n\r\nexport class ContactDetail {\r\n  static inject() { return [WebAPI, EventAggregator]; }\r\n\r\n  constructor(api, ea) {\r\n    this.api = api;\r\n    this.ea = ea;\r\n  }\r\n\r\n  activate(params, routeConfig) {\r\n    this.routeConfig = routeConfig;\r\n\r\n    return this.api.getContactDetails(params.id).then(contact => {\r\n      this.contact = contact;\r\n      this.routeConfig.navModel.setTitle(contact.firstName);\r\n      this.originalContact = JSON.parse(JSON.stringify(contact));\r\n    });\r\n  }\r\n\r\n  get canSave() {\r\n    return this.contact.firstName && this.contact.lastName && !this.api.isRequesting;\r\n  }\r\n\r\n  save() {\r\n    this.api.saveContact(this.contact).then(contact => {\r\n      this.contact = contact;\r\n      this.routeConfig.navModel.setTitle(contact.firstName);\r\n      this.originalContact = JSON.parse(JSON.stringify(contact));\r\n      this.ea.publish(new ContactUpdated(this.contact));\r\n    });\r\n  }\r\n\r\n  canDeactivate() {\r\n    if (!areEqual(this.originalContact, this.contact)) {\r\n      let result = confirm('You have unsaved changes. Are you sure you wish to leave?');\r\n\r\n      if (!result) {\r\n        this.ea.publish(new ContactViewed(this.contact));\r\n      }\r\n\r\n      return result;\r\n    }\r\n\r\n    return true;\r\n  }\r\n}\r\n","import {EventAggregator} from 'aurelia-event-aggregator';\r\nimport {WebAPI} from './web-api';\r\nimport {ContactUpdated, ContactViewed} from './messages';\r\n\r\nexport class ContactList {\r\n  static inject() { return [WebAPI, EventAggregator]; }\r\n\r\n  constructor(api, ea) {\r\n    this.api = api;\r\n    this.contacts = [];\r\n\r\n    ea.subscribe(ContactViewed, msg => this.select(msg.contact));\r\n    ea.subscribe(ContactUpdated, msg => {\r\n      let id = msg.contact.id;\r\n      let found = this.contacts.find(x => x.id === id);\r\n      Object.assign(found, msg.contact);\r\n    });\r\n  }\r\n\r\n  created() {\r\n    this.api.getContactList().then(contacts => this.contacts = contacts);\r\n  }\r\n\r\n  select(contact) {\r\n    this.selectedId = contact.id;\r\n    return true;\r\n  }\r\n}\r\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export class ContactUpdated {\r\n  constructor(contact) {\r\n    this.contact = contact;\r\n  }\r\n}\r\n\r\nexport class ContactViewed {\r\n  constructor(contact) {\r\n    this.contact = contact;\r\n  }\r\n}\r\n","export class NoSelection {\r\n  constructor() {\r\n    this.message = 'Please select a Contact';\r\n  }\r\n}\r\n","export function areEqual(obj1, obj2) {\n\treturn Object.keys(obj1).every((key) => obj2.hasOwnProperty(key) && (obj1[key] === obj2[key]));\n};","let latency = 200;\nlet id = 0;\n\nfunction getId(){\n  return ++id;\n}\n\nlet contacts = [\n  {\n    id:getId(),\n    firstName:'John',\n    lastName:'Tolkien',\n    email:'tolkien@inklings.com',\n    phoneNumber:'867-5309'\n  },\n  {\n    id:getId(),\n    firstName:'Clive',\n    lastName:'Lewis',\n    email:'lewis@inklings.com',\n    phoneNumber:'867-5309'\n  },\n  {\n    id:getId(),\n    firstName:'Owen',\n    lastName:'Barfield',\n    email:'barfield@inklings.com',\n    phoneNumber:'867-5309'\n  },\n  {\n    id:getId(),\n    firstName:'Charles',\n    lastName:'Williams',\n    email:'williams@inklings.com',\n    phoneNumber:'867-5309'\n  },\n  {\n    id:getId(),\n    firstName:'Roger',\n    lastName:'Green',\n    email:'green@inklings.com',\n    phoneNumber:'867-5309'\n  }\n];\n\nexport class WebAPI {\n  isRequesting = false;\n  \n  getContactList(){\n    this.isRequesting = true;\n    return new Promise(resolve => {\n      setTimeout(() => {\n        let results = contacts.map(x =>  { return {\n          id:x.id,\n          firstName:x.firstName,\n          lastName:x.lastName,\n          email:x.email\n        }});\n        resolve(results);\n        this.isRequesting = false;\n      }, latency);\n    });\n  }\n\n  getContactDetails(id){\n    this.isRequesting = true;\n    return new Promise(resolve => {\n      setTimeout(() => {\n        let found = contacts.filter(x => x.id == id)[0];\n        resolve(JSON.parse(JSON.stringify(found)));\n        this.isRequesting = false;\n      }, latency);\n    });\n  }\n\n  saveContact(contact){\n    this.isRequesting = true;\n    return new Promise(resolve => {\n      setTimeout(() => {\n        let instance = JSON.parse(JSON.stringify(contact));\n        let found = contacts.filter(x => x.id == contact.id)[0];\n\n        if(found){\n          let index = contacts.indexOf(found);\n          contacts[index] = instance;\n        }else{\n          instance.id = getId();\n          contacts.push(instance);\n        }\n\n        this.isRequesting = false;\n        resolve(instance);\n      }, latency);\n    });\n  }\n}\n","export function configure(config) {\n  config.globalResources(['./elements/loading-indicator']);\n}\n","import * as nprogress from 'nprogress';\r\nimport {bindable, noView, decorators} from 'aurelia-framework';\r\n\r\nexport let LoadingIndicator = decorators(\r\n  noView(['nprogress/nprogress.css']),\r\n  bindable({name: 'loading', defaultValue: false})\r\n).on(class {\r\n  loadingChanged(newValue) {\r\n    if (newValue) {\r\n      nprogress.start();\r\n    } else {\r\n      nprogress.done();\r\n    }\r\n  }\r\n});"],"sourceRoot":".."}